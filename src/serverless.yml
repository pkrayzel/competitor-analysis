service: competitor-analysis

provider:
  name: aws
  runtime: python3.7
  memorySize: 128    # MB ram
  timeout: 180       # seconds

# https://medium.com/@glicht/serverless-framework-defining-per-function-iam-roles-c678fa09f46d
functions:
  category-spider:
    handler: category_spider.handler
    memorySize: 512
    timeout: 300
    iamRoleStatements:
    - Effect: "Allow"
      Action:
       - s3:PutObject
      Resource: arn:aws:s3:::${self:custom.bucket_name}
    - Effect: "Allow"
      Action:
       - s3:PutObject
      Resource: arn:aws:s3:::${self:custom.bucket_name}/*
    environment:
      ENV: ${opt:stage, 'dev'}
      BUCKET_NAME: ${self:custom.bucket_name}
      LOCAL_DIRECTORY: /tmp
      PHANTOMJS_EXEC_PATH: bin/phantomjs-2.1.1-linux-x86_64
    layers:
      - ${cf:selenium-layer-dev.SeleniumLayerExport}
      - ${cf:selenium-layer-dev.ChromedriverLayerExport}

  s3-json-to-sqs:
    handler: s3_json_to_sqs.handler
    timeout: 60       # seconds
    events:
      - s3:
          bucket: ${self:custom.bucket_name}
          event: s3:ObjectCreated:*
          rules:
            - prefix: category-overall-info/
            - suffix: .json
    iamRoleStatements:
    - Effect: "Allow"
      Action:
       - s3:Get*
       - s3:List*
      Resource: arn:aws:s3:::${self:custom.bucket_name}
    - Effect: "Allow"
      Action:
       - s3:Get*
       - s3:List*
      Resource: arn:aws:s3:::${self:custom.bucket_name}/*
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:SendMessage
      Resource: arn:aws:sqs:*:*:competitor-analysis-*
    environment:
      ENV: ${opt:stage, 'dev'}
      QUEUE_NAME: ${self:custom.queue_name}
      PHANTOMJS_EXEC_PATH: bin/phantomjs-2.1.1-linux-x86_64

  product-pages-spider:
    handler: product_pages_spider.handler
    memorySize: 512
    timeout: 900
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - ProductDetailsQueue
              - Arn
    iamRoleStatements:
      - Effect: "Allow"
        Action:
         - s3:PutObject
        Resource: arn:aws:s3:::${self:custom.bucket_name}
      - Effect: "Allow"
        Action:
         - s3:PutObject
        Resource: arn:aws:s3:::${self:custom.bucket_name}/*
      - Effect: Allow
        Action:
          - sqs:ChangeMessageVisibility
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
          - sqs:ReceiveMessage
        Resource: arn:aws:sqs:*:*:competitor-analysis-*
    environment:
      ENV: ${opt:stage, 'dev'}
      LOCAL_DIRECTORY: /tmp
      PHANTOMJS_EXEC_PATH: bin/phantomjs-2.1.1-linux-x86_64
    layers:
      - ${cf:selenium-layer-dev.SeleniumLayerExport}
      - ${cf:selenium-layer-dev.ChromedriverLayerExport}

  json-to-csv:
    handler: json_to_csv.handler
    timeout: 60
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:PutObject
          - s3:Get*
          - s3:List*
        Resource: arn:aws:s3:::${self:custom.bucket_name}
      - Effect: Allow
        Action:
          - s3:PutObject
          - s3:Get*
          - s3:List*
        Resource: arn:aws:s3:::${self:custom.bucket_name}/*
    environment:
      ENV: ${opt:stage, 'dev'}
      LOCAL_DIRECTORY: /tmp
      PHANTOMJS_EXEC_PATH: bin/phantomjs-2.1.1-linux-x86_64

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
  bucket_name: made-${opt:stage, 'dev'}-competitor-analysis
  queue_name: competitor-analysis-products-queue-${opt:stage, 'dev'}

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function

resources:
  Resources:
    ProductDetailsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        VisibilityTimeout: 1000
        QueueName: ${self:custom.queue_name}