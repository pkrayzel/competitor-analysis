service: competitor-analysis

provider:
  name: aws
  runtime: python3.7
  memorySize: 512    # MB ram
  timeout: 180       # seconds

# https://medium.com/@glicht/serverless-framework-defining-per-function-iam-roles-c678fa09f46d
functions:
  category-spider:
    handler: category_spider.handler
#    events:
#      - schedule:
#          rate: rate(24 hours)
    timeout: 300
    iamRoleStatements:
    - Effect: "Allow"
      Action:
       - s3:PutObject
       - s3:Get*
       - s3:List*
      Resource: arn:aws:s3:::${self:custom.bucket_name}/*
    - Effect: Allow
      Action:
        - dynamodb:List*
        - dynamodb:Describe*
        - dynamodb:Get*
      Resource: arn:aws:dynamodb:*:*:table/competitor*
    environment:
      ENV: ${opt:stage, 'dev'}
      BUCKET_NAME: ${self:custom.bucket_name}

  s3-json-to-sqs:
    handler: s3_json_to_sqs.handler
    events:
      - s3:
          bucket: ${self:custom.bucket_name}
          event: s3:ObjectCreated:*
          rules:
            - prefix: category-overall-info/
            - suffix: .json
    iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:Get*
        - s3:List*
      Resource: arn:aws:s3:::${self:custom.bucket_name}/*
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:*:*:competitor-analysis-*
    environment:
      ENV: ${opt:stage, 'dev'}
      QUEUE_URL:
        Ref: ProductDetailsQueue

  product-pages-spider:
    handler: product_pages_spider.handler
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - ProductDetailsQueue
              - Arn
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:*
        Resource: arn:aws:s3:::${self:custom.bucket_name}/*
      - Effect: Allow
        Action:
          - sqs:*
        Resource: arn:aws:sqs:*:*:competitor-analysis-*
    environment:
      ENV: ${opt:stage, 'dev'}

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
  bucket_name: made-${opt:stage, 'dev'}-competitor-analysis

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function

resources:
  Resources:
    ProductDetailsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        VisibilityTimeout: 1000
        QueueName: competitor-analysis-products-queue-${opt:stage, 'dev'}